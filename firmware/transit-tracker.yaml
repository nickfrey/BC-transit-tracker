substitutions:
  project_version: "v1.0"

esphome:
  name: transit-tracker
  friendly_name: Transit Tracker
  name_add_mac_suffix: true
  project:
    name: "Eastside Urbanism.Transit Tracker"
    version: ${project_version}
  platformio_options:
    build_flags: -DBOARD_HAS_PSRAM

esp32:
  board: esp32-s3-devkitm-1
  framework:
    type: arduino
    platform_version: 6.12.0

psram:

external_components:
  - source: github://TillFleisch/ESPHome-HUB75-MatrixDisplayWrapper@main
  - source: github://tjhorner/esphome-custom-components@fbb9f517c4b1d0a29fb3c387629a6de637ec08da
    components: [ serial_rpc ]
  - source: github://nickfrey/esphome-transit-tracker@main
    refresh: 0s

logger:
  level: DEBUG

wifi:
  ssid: BC

captive_portal:

api:
  reboot_timeout: 0s

http_request:
  verify_ssl: false

ota:
  - platform: http_request

update:
  - platform: http_request
    name: Firmware Update
    source: https://bcsustainability.github.io/firmware/manifest.json
    id: fw_update
    update_interval: 6h

switch:
  - platform: template
    id: flip_display_config
    name: "Flip Display"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    turn_on_action:
      - lambda: |-
          id(matrix).set_rotation(esphome::display::DisplayRotation::DISPLAY_ROTATION_180_DEGREES);
    turn_off_action:
      - lambda: |-
          id(matrix).set_rotation(esphome::display::DisplayRotation::DISPLAY_ROTATION_0_DEGREES);

button:
  - platform: restart
    name: "Restart"
  - platform: template
    id: reload_tracker
    on_press:
      - lambda: |-
          id(tracker).reconnect();
  - platform: template
    id: write_preferences
    on_press:
      - lambda: |-
          global_preferences->sync();

text:
  - platform: template
    id: base_url_config
    mode: text
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: |
          id(tracker).set_base_url(id(base_url_config)->state);
  - platform: template
    id: feed_code_config
    mode: text
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: |
          id(tracker).set_feed_code(id(feed_code_config)->state);
  - platform: template
    id: schedule_config
    mode: text
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: |
          
  - platform: template
    id: abbreviations_config
    mode: text
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: |
          id(tracker).set_abbreviations_from_text(id(abbreviations_config)->state);
  - platform: template
    id: route_styles_config
    mode: text
    optimistic: true
    restore_value: true
    on_value:
      then:
        lambda: |
          id(tracker).set_route_styles_from_text(id(route_styles_config)->state);

select:
  - platform: template
    id: time_display_config
    optimistic: true
    restore_value: true
    options:
      - "departure"
      - "arrival"
    on_value:
      then:
        lambda: |-
          id(tracker).set_display_departure_times(id(time_display_config)->state == "departure");
  - platform: template
    id: time_units_config
    optimistic: true
    restore_value: true
    options:
      - "long"
      - "short"
      - "none"
    on_value:
      then:
        lambda: |-
          transit_tracker::UnitDisplay unit_display;
          if (id(time_units_config)->state == "long") {
            unit_display = transit_tracker::UnitDisplay::UNIT_DISPLAY_LONG;
          } else if (id(time_units_config)->state == "short") {
            unit_display = transit_tracker::UnitDisplay::UNIT_DISPLAY_SHORT;
          } else {
            unit_display = transit_tracker::UnitDisplay::UNIT_DISPLAY_NONE;
          }

          id(tracker).set_unit_display(unit_display);
  - platform: template
    id: list_mode_config
    optimistic: true
    restore_value: true
    options:
      - "sequential"
      - "nextPerRoute"
    on_value:
      then:
        lambda: |-
          id(tracker).set_list_mode(id(list_mode_config)->state);

display:
  - platform: hub75_matrix_display
    id: matrix
    width: 64
    height: 32
    chain_length: 2
    R1_pin: 42
    G1_pin: 40
    B1_pin: 41
    R2_pin: 38
    G2_pin: 37
    B2_pin: 39
    A_pin: 45
    B_pin: 36
    C_pin: 48
    D_pin: 35
    E_pin: 21
    LAT_pin: 47
    OE_pin: 14
    CLK_pin: 2
    clock_phase: false
    i2sspeed: HZ_20M
    brightness: 254
    pages:
      - id: transit_schedule
        lambda: |-
          id(tracker).draw_current_page();

interval:
  - interval: 1s
    then:
      - lambda: |-
          id(tracker).tick();
  - interval: 30s
    then:
      - lambda: |-
          id(fw_update).perform(false);

font:
  - file: "fonts/Pixolletta8px.ttf"
    id: pixolletta
    size: 10
    glyphs:
      - abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.,:;!?()"'-+/*=%@#[]{}<>|&^~
      - " "

time:
  - platform: sntp
    id: sntp_time
    timezone: America/Los_Angeles

web_server:

transit_tracker:
  id: tracker
  limit: 20 # This is the max allowed by TJ Horner's API
  display_limit: 3
  base_url: "wss://tt.horner.tj/"
  config_url: "https://bcsustainability.github.io/transit-tracker.json"
  time_display: "arrival"
  show_units: "long"
  list_mode: "sequential"
  abbreviations:
    - from: "Bellevue Transit Center Bellevue Redmond Road"
      to: "Bellevue TC"
    - from: "Bellevue Transit Center South Bellevue Station"
      to: "Bellevue TC"
    - from: "Bellevue Transit Center Factoria"
      to: "Bellevue TC"
    - from: "Bellevue Transit Center Crossroads"
      to: "Bellevue TC"
    - from: "South Bellevue Station Eastgate"
      to: "S Bellevue Link"
    - from: "Downtown Redmond Station Overlake Village Station"
      to: "Redmond"
    - from: "Kirkland Crossroads"
      to: "Kirkland TC"
    - from: "Factoria Crossroads"
      to: "Factoria"
    - from: "University District Bellevue"
      to: "U-District"
    - from: "Issaquah Bellevue"
      to: "Issaquah"
    - from: "Transit Center"
      to: "TC"

serial_rpc:
